Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

a) Insert a character
b) Delete a character
c) Replace a character


====================================================be careful of the 
index in the result loop (for word , index = index -1)


Solution:

public class Solution {
    public int minDistance(String word1, String word2) {
        // Start typing your Java solution below
        // DO NOT write main() function
        int n = word1.length();
        int m = word2.length();
        if(n == 0 || m == 0){
            return n == 0?m:n;
        }
        int[][] res = new int[n+1][m+1];
        for(int i = 0 ; i <= m;i++){
            res[0][i] = i;
        }
        for(int i = 0 ; i <= n; i++){
            res[i][0] = i;
        }
        for(int i = 1; i <= n ; i++){
            for(int j = 1; j <= m ;j++){
                if(word1.charAt(i -1) == word2.charAt(j-1)){
                    res[i][j] =Math.min(res[i][j-1] + 1, Math.min(res[i-1][j-1],res[i-1][j]+1));
                }else{
                    res[i][j] = Math.min(res[i-1][j-1],Math.min(res[i-1][j],res[i][j-1])) + 1;
                }
            }
        }
        return res[n][m];
    }
}