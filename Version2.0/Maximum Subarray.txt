Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [?2,1,?3,4,?1,2,1,?5,4],
the contiguous subarray [4,?1,2,1] has the largest sum = 6.

More practice:
If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.


Complexity: time:O(n) space O(1)

take care of the initial..

Solution:

public class Solution {
    public int maxSubArray(int[] A) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(A.length == 0){
            return 0;
        }
        int res = A[0];
        int max = A[0];
        for(int i = 1 ; i < A.length; i++){
            if(max > 0 ){
                max += A[i];
            }else{
                max = A[i];
            }
            if(res < max){
                res = max;
            }
        }
        return res;
    }
}