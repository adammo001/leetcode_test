Given two sorted integer arrays A and B, merge B into A as one sorted array.

Note:
You may assume that A has enough space to hold additional elements from B. The number of elements initialized in A and B are m and n respectively.

=============================

Complexity time: O(m+n)

take care the edge of A and B

Solution:

public class Solution {
    public void merge(int A[], int m, int B[], int n) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(n == 0){
            return;
        }
        int index = m + n -1;        
        while(n >= 1){
            if(m == 0){
                A[index--] = B[n-1];
                n--;
            }else{
                int max = Math.max(A[m-1],B[n-1]);
                A[index--] = max;
                if(max == A[m-1]){
                    m--;
                }else{
                    n--;
                }
            }
        }   
    }
}