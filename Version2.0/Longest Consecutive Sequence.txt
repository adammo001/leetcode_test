Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.

============================

Complexity: space O(n) time : O(n)

use a HashSet to store the nums, for each num check its upper and lower in loop
be careful that, in the loop, if find one integer, remove it from the hashset to reduce repeated computation for other integers

Solution:

public class Solution {
    public int longestConsecutive(int[] num) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(num == null || num.length == 0){
            return 0;
        }
        HashSet<Integer> checks = new HashSet<Integer>();
        for(int n : num){
            checks.add(n);
        }
        int max = 0;
        for(int i = 0 ; i < num.length;i++){
            int tmp = num[i];
            int left = 0;
            int right = 0;
            while(checks.contains(++tmp)){
                left++;
                checks.remove(tmp-1);
            }
            tmp = num[i];
            while(checks.contains(--tmp)){
                right++;
                checks.remove(tmp+1);
            }
            if(max < left + right + 1){
                max = left+right+1;
            }
        }
        return max;
    }
}