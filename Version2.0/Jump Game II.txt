Given an array of non-negative integers, you are initially positioned at the first index of the array.

Each element in the array represents your maximum jump length at that position.

Your goal is to reach the last index in the minimum number of jumps.

For example:
Given array A = [2,3,1,1,4]

The minimum number of jumps to reach the last index is 2. (Jump 1 step from index 0 to 1, then 3 steps to the last index.)

==============================

in the last max range, update current max. when i bigger than last max. step ++, and update last max = current max

Solution:

public class Solution {
    public int jump(int[] A) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(A.length <= 1){
            return 0;
        }
        int max = 0;
        int res = 0;
        int cur = 0;
        for(int i = 0 ; i < A.length; i++){
            if(i > cur){
                res++;
                cur = max;
            }
            max = Math.max(max,A[i] + i);
        }
        return res;
    }
}