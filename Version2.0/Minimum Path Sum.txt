Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

=======================

use one array to record the results.

Solution:

public class Solution {
    public int minPathSum(int[][] grid) {
        // Start typing your Java solution below
        // DO NOT write main() function
        int n = grid.length;
        if(n == 0){
            return 0;
        }
        int m = grid[0].length;
        int[] res = new int[m];
        for(int i = 0 ; i < n; i++){
            for(int j = 0 ; j < m; j++){
                if(i == 0){
                    if(j != 0){res[j] += res[j -1];}
                    res[j] += grid[i][j];
                }else if(j == 0){
                    res[j] += grid[i][j];
                }else{
                    res[j] = Math.min(res[j],res[j-1]) + grid[i][j];
                }
            }
        }
        return res[m-1];
    }
}