Given a set of distinct integers, S, return all possible subsets.

Note:

Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If S = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

=============================

take care : use new ArrayList to load the sets

Solution :

public class Solution {
    public ArrayList<ArrayList<Integer>> subsets(int[] S) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        res.add(new ArrayList<Integer>());
        if(S.length == 0){
            return res;
        }
        Arrays.sort(S);
        for(int i = 0 ; i < S.length; i++){
            ArrayList<ArrayList<Integer>> tmps = new ArrayList<ArrayList<Integer>>(res);
            for(ArrayList<Integer> tmp : tmps){
                ArrayList<Integer> ntmp = new ArrayList<Integer>(tmp);
                ntmp.add(S[i]);
                res.add(ntmp);
            }
        }
        return res;
    }
}